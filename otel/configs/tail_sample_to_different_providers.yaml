receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        cors:
          allowed_origins:
            - http://*
            - https://*

processors:
  batch/datadog:
    send_batch_max_size: 1000
    send_batch_size: 100
    timeout: 10s
  batch/new_relic:
    send_batch_max_size: 1000
    send_batch_size: 100
    timeout: 10s
  filter/service-a-metrics:
    error_mode: ignore
    metrics:
      include:
        match_type: strict
        resource_attributes:
          - key: service.name
            value: "service-a"
  filter/not-service-a-metrics:
    error_mode: ignore
    metrics:
      exclude:
        match_type: strict
        resource_attributes:
          - key: service.name
            value: "service-a"
  filter/service-a-logs:
    error_mode: ignore
    logs:
      include:
        match_type: strict
        resource_attributes:
          - key: service.name
            value: "service-a"
  filter/not-service-a-logs:
    error_mode: ignore
    metrics:
      exclude:
        match_type: strict
        resource_attributes:
          - key: service.name
            value: "service-a"
  tail_sampling/service-a:
    decision_wait: 10s
    num_traces: 1000
    expected_new_traces_per_sec: 100
    policies:
      [
        {
          name: filter_service_a,
          type: string_attribute,
          string_attribute: { key: "service.name", values: [ "service-a" ] }
        }
      ]
  tail_sampling/service-b:
    decision_wait: 10s
    num_traces: 1000
    expected_new_traces_per_sec: 100
    policies:
      [
        {
          name: filter_service_b,
          type: string_attribute,
          string_attribute: { key: "service.name", values: [ "service-b" ] }
        }
      ]
  tail_sampling/service-c:
    decision_wait: 10s
    num_traces: 1000
    expected_new_traces_per_sec: 100
    policies:
      [
        {
          name: filter_service_c,
          type: string_attribute,
          string_attribute: { key: "service.name", values: [ "service-c" ] }
        }
      ]
  batch:

connectors:
  datadog/connector:

exporters:
  awsemf:
    region: ${env:AWS_REGION}
    log_group_name: ${env:CW_METRICS_EMF_LOG_GROUP_NAME}
    log_stream_name: ${env:CW_METRICS_EMF_LOG_STREAM_NAME}
    namespace: ${env:CW_METRICS_NAMESPACE}
    dimension_rollup_option: "NoDimensionRollup"
    log_retention: 7
  awscloudwatchlogs:
    log_group_name: ${env:CW_LOG_GROUP_NAME}
    log_stream_name: ${env:CW_LOG_STREAM_NAME}
    raw_log: true
    region: ${env:AWS_REGION}
    log_retention: 7
  awsxray:
    region: ${env:AWS_REGION}
  otlphttp/new_relic:
    endpoint: https://otlp.nr-data.net
    tls:
      insecure: true
    headers:
      api-key: ${env:NR_API_KEY}
  datadog:
    idle_conn_timeout: 30s
    api:
      site: ${env:DD_SITE}
      key: ${env:DD_API_KEY}
  otlphttp/counter:
    endpoint: ${env:OTEL_LOCAL_COUNTER}
    compression: none
    encoding: json
    tls:
      insecure: true

service:
  pipelines:
    logs/service-a:
      receivers: [otlp]
      processors: [filter/service-a-logs, batch]
      exporters: [awscloudwatchlogs]
    logs/others:
      receivers: [otlp]
      processors: [filter/not-service-a-logs, batch]
      exporters: [otlphttp/counter]
    metrics/service-a:
      receivers: [otlp]
      processors: [filter/service-a-metrics, batch]
      exporters: [awsemf]
    metrics/others:
      receivers: [datadog/connector, otlp]
      processors: [filter/not-service-a-metrics, batch/datadog]
      exporters: [datadog]
    traces/service-a:
      receivers: [otlp]
      processors: [tail_sampling/service-a, batch]
      exporters: [otlphttp/new_relic]
    traces/service-b:
      receivers: [ otlp ]
      processors: [ tail_sampling/service-b, batch/datadog ]
      exporters: [ datadog/connector, datadog ]
    traces/service-c:
      receivers: [ otlp ]
      processors: [ tail_sampling/service-c, batch ]
      exporters: [ awsxray ]
